#!/usr/bin/python3

import sys
import socket

# Check if no arguments are provided (only script name)
if len(sys.argv) == 1:
    print(f"Usage: {sys.argv[0]} <IP> [START_PORT] [END_PORT]", file=sys.stderr)
    sys.exit(1)  # Exit with error code 1 if no IP is provided

# Assign target IP from command-line argument
ip = sys.argv[1]

# Default port range: 1 to 65535 (all ports)
start = 1
end = 65535

# Override default start/end ports if provided
if len(sys.argv) >= 3:
    start = int(sys.argv[2])  # Convert start port to integer
    if len(sys.argv) >= 4:
        end = int(sys.argv[3])  # Convert end port to integer

# Function to check if a port is open
def check_port_status(port: int) -> bool:
    try:
        print(f"Checking port {port}...")  # Log current port being scanned
        s = socket.socket()  # Create a new socket
        s.settimeout(1)  # Set timeout to 1 second
        s.connect((ip, port))  # Attempt to connect to the port
        s.close()  # Close the socket if connection succeeds
        return True  # Port is open
    except (ConnectionRefusedError, socket.timeout):
        return False  # Port is closed or unreachable

# Scan ports in the specified range
for port in range(start, end + 1):  # Include end port in the loop
    if check_port_status(port):
        print(f"[+] Open Port Found: {port}")  # Print open ports
